import React, { useState } from 'react';
import vector from './vector.png';
import './App.css';

function App() {
  // State to manage the list of section boxes
  const [boxes, setBoxes] = useState([]);

  // Function to add a new section to the list
  const handleAddSection = () => {
    const sectionHeading = document.getElementById('sectionHeading').value;
    const question = document.getElementById('question').value;

    // Check if both sectionHeading and question are filled
    if (sectionHeading && question) {
      // Create a new section object
      const newBox = {
        sectionHeading,
        question,
      };

      // Add the new section to the boxes list
      setBoxes([...boxes, newBox]);
    }
  };

  // Function to add a new empty section to the list
  const handleAddMore = () => {
    const emptyBox = {
      sectionHeading: '',
      question: '',
    };
    // Add the empty section to the boxes list
    setBoxes([...boxes, emptyBox]);
  };

  // Function to discard all sections from the list
  const handleDiscard = () => {
    // Clear the boxes list to remove all sections
    setBoxes([]);
  };

  // Function to delete a specific section from the list
  const handleDeleteBox = (index) => {
    // Create a copy of the boxes list
    const updatedBoxes = [...boxes];
    // Remove the section at the given index
    updatedBoxes.splice(index, 1);
    // Update the boxes list with the modified array
    setBoxes(updatedBoxes);
  };

  return (
    <div>
      <div className='container border rounded mt-5 w-50'>
        <div className='input-group mt-5'>
          <input
            type='text'
            className='form-control'
            placeholder='Section Heading'
            aria-label='Section Heading'
            id='sectionHeading'
          />
        </div>

        <hr></hr>

        <div className='input-group mt-5'>
          <input
            type='text'
            className='form-control'
            placeholder='Add Question'
            aria-label='Add Question'
            id='question'
          />
        </div>

        <hr></hr>
        <br></br>

        <div>
          {/* Add More button to add an empty section */}
          <button
            style={{ border: '1px solid white', backgroundColor: 'white' }}
            onClick={handleAddMore}
          >
            {' '}
            <img src={vector} alt='vector' /> Add More
          </button>
        </div>

        <div>
          {/* Discard button to remove all sections */}
          <button
            className='btn btn-danger ms-1 mt-5 bg-white border-white text-danger mb-2'
            onClick={handleDiscard}
          >
            Discard
          </button>
          {/* Add Section button to add a new section */}
          <button
            className='btn btn-success ms-3 mt-5 mb-2 p-3 '
            onClick={handleAddSection}
          >
            Add Section
          </button>
        </div>
      </div>

      {/* Render each section box */}
      {boxes.map((box, index) => (
        <div key={index} className='container border rounded mt-5 w-50'>
          {/* Close button to delete the specific section */}
          <button
            type='button'
            className='btn-close'
            aria-label='Close'
            style={{ float: 'right', marginTop: '20px', marginBottom: '10px' }}
            onClick={() => handleDeleteBox(index)}
          ></button>

          <div className='input-group mt-5'>
            {/* Input field for Section Heading */}
            <input
              type='text'
              className='form-control'
              placeholder='Section Heading'
              aria-label='Section Heading'
              defaultValue={box.sectionHeading}
            />
          </div>

          <hr></hr>

          <div className='input-group mt-5'>
            {/* Input field for Question */}
            <input
              type='text'
              className='form-control'
              placeholder='Add Question'
              aria-label='Add Question'
              defaultValue={box.question}
            />
          </div>

          <hr></hr>
          <br></br>
        </div>
      ))}
    </div>
  );
}

export default App;


//--------------------------------------------

Sure, I'll explain the code and each function step by step:

1. The code sets up a functional component called `App`.

2. The `useState` hook is used to manage the state of the application. The `boxes` state stores an array of objects, where each object represents a section with its corresponding heading and question.

3. The `handleAddSection` function is responsible for adding a new section to the `boxes` state. It is triggered when the user clicks the "Add Section" button. The function gets the values from the input fields for the section heading and question. If both fields have content, it creates a new object representing the section and adds it to the `boxes` state using the `setBoxes` function.

4. The `handleAddMore` function is triggered when the user clicks the "+ Add More" button. It adds an empty box (section with no heading and question) to the `boxes` state, allowing the user to add more sections.

5. The `handleDiscard` function is triggered when the user clicks the "Discard" button. It resets the `boxes` state to an empty array, effectively removing all sections and resetting the form.

6. The `handleDeleteBox` function is triggered when the user clicks the close (delete) button on a section. It takes the index of the section to be deleted and creates a copy of the `boxes` array using the spread operator. Then, it removes the selected section from the array by using the `splice` method. Finally, it updates the `boxes` state with the updated array using `setBoxes`.

7. The `return` statement renders the JSX content. It consists of a container that holds the initial input fields for section heading and question. The "Add More," "Discard," and "Add Section" buttons are also rendered within this container.

8. The `boxes.map()` function is used to iterate over each section object in the `boxes` state. For each section, a new container is created with input fields for section heading and question, along with the close (delete) button. The value of each input field is set to the corresponding section's data using the `defaultValue` attribute.

9. The close (delete) button on each section is connected to the `handleDeleteBox` function with the appropriate index, so that when clicked, it deletes that specific section.

10. Finally, each section container also includes the "Add More," "Discard," and "Add Section" buttons, allowing users to perform these actions for each section individually.

To summarize, the code sets up a React component that allows users to create, delete, and manage multiple sections with a section heading and a question. Users can add more sections, delete individual sections, discard all sections, and add a new section with the entered data. The component dynamically updates the UI based on the current state of the `boxes` array.


//-------------------code -------------------------------------------------


import React, { useState } from 'react';
import vector from './vector.png';
import './App.css';

function App() {
  const [boxes, setBoxes] = useState([]);

  const handleAddSection = () => {
    const sectionHeading = document.getElementById('sectionHeading').value;
    const question = document.getElementById('question').value;

    if (sectionHeading && question) {
      const newBox = {
        sectionHeading,
        question,
      };
      setBoxes([...boxes, newBox]);
    }
  };

  const handleAddMore = () => {
    const emptyBox = {
      sectionHeading: '',
      question: '',
    };
    setBoxes([...boxes, emptyBox]);
  };

  const handleDiscard = () => {
    setBoxes([]);
  };

  const handleDeleteBox = (index) => {
    const updatedBoxes = [...boxes];
    updatedBoxes.splice(index, 1);
    setBoxes(updatedBoxes);
  };

  return (
    <div>
      <div className='container border rounded mt-5 w-50'>
        <div className='input-group mt-5'>
          <input
            type='text'
            className='form-control'
            placeholder='Section Heading'
            aria-label='Section Heading'
            id='sectionHeading'
          />
        </div>

        <hr></hr>

        <div className='input-group mt-5'>
          <input
            type='text'
            className='form-control'
            placeholder='Add Question'
            aria-label='Add Question'
            id='question'
          />
          {/* Delete (basket) icon to clear the "Add Question" input field */}
          <span
            className='input-group-text'
            style={{ cursor: 'pointer' }}
            onClick={() => (document.getElementById('question').value = '')}
          >
            üóëÔ∏è
          </span>
        </div>

        <hr></hr>
        <br></br>

        <div>
          <button
            style={{ border: '1px solid white', backgroundColor: 'white' }}
            onClick={handleAddMore}
          >
            {' '}
            <img src={vector} alt='vector' /> Add More
          </button>
        </div>

        <div>
          <button
            className='btn btn-danger ms-1 mt-5 bg-white border-white text-danger mb-2'
            onClick={handleDiscard}
          >
            Discard
          </button>
          <button
            className='btn btn-success ms-3 mt-5 mb-2 p-3 '
            onClick={handleAddSection}
          >
            Add Section
          </button>
        </div>
      </div>

      {boxes.map((box, index) => (
        <div key={index} className='container border rounded mt-5 w-50'>
          <button
            type='button'
            className='btn-close'
            aria-label='Close'
            style={{ float: 'right', marginTop: '20px', marginBottom: '10px' }}
            onClick={() => handleDeleteBox(index)}
          ></button>

          <div className='input-group mt-5'>
            <input
              type='text'
              className='form-control'
              placeholder='Section Heading'
              aria-label='Section Heading'
              defaultValue={box.sectionHeading}
            />
          </div>

          <hr></hr>

          <div className='input-group mt-5'>
            <input
              type='text'
              className='form-control'
              placeholder='Add Question'
              aria-label='Add Question'
              defaultValue={box.question}
            />
          </div>

          <hr></hr>
          <br></br>
          <div>
            <button
              style={{ border: '1px solid white', backgroundColor: 'white' }}
              onClick={handleAddMore}>
              {' '}
              <img src={vector} alt='vector' /> Add More
            </button>

          </div>

          <div>
              <button
              className='btn btn-danger ms-1 mt-5 bg-white border-white text-danger mb-2'
              onClick={() => handleDeleteBox(index)}
            >
              Discard
            </button>
            <button
              className='btn btn-success ms-3 mt-5 mb-2 p-3 '
              onClick={handleAddSection}
            >
              Add Section
            </button>
          </div>
        </div>
      ))}
    </div>
  );
}

export default App;
